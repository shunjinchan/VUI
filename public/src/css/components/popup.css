@charset "UTF-8";
/* 
* @Author: shunjinchan
* @Date:   2015-12-30 23:40:12
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-23 03:40:57
*/
.popup-title {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis; }

/* 
* @Author: shunjinchan
* @Date:   2016-01-23 01:01:03
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-25 00:34:39
* 模拟一像素
* @usage:
* @media screen and (-webkit-min-device-pixel-ratio: 2) { @include border(bottom, #abcdef) }
*/
/* popup begin */
.popup {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  z-index: 1040;
  background: #fff;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: none;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  background-color: #f3f4f5; }

.popup.from-top {
  /* 顶部滑入动画 */
  -webkit-transform: translate3d(0, -100%, 0);
  transform: translate3d(0, -100%, 0); }
  .popup.from-top.transition-in, .popup.from-top.transition-out {
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-delay: 0s;
    transition-delay: 0s;
    -webkit-transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.1);
    transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.1); }
  .popup.from-top.transition-in {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .popup.from-top.transition-out {
    -webkit-transform: translate3d(0, -100%, 0);
    transform: translate3d(0, -100%, 0); }

.popup.from-bottom {
  /* 底部滑入动画 */
  -webkit-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0); }
  .popup.from-bottom.transition-in, .popup.from-bottom.transition-out {
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-delay: 0s;
    transition-delay: 0s; }
  .popup.from-bottom.transition-in {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .popup.from-bottom.transition-out {
    -webkit-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0); }

.popup.from-left {
  /* 从左向右滑入动画 */
  -webkit-transform: translate3d(-100%, 0, 0);
  transform: translate3d(-100%, 0, 0); }
  .popup.from-left.transition-in, .popup.from-left.transition-out {
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-delay: 0s;
    transition-delay: 0s; }
  .popup.from-left.transition-in {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .popup.from-left.transition-out {
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }

.popup.from-right {
  /* 从左向右滑入动画 */
  -webkit-transform: translate3d(100%, 0, 0);
  transform: translate3d(100%, 0, 0); }
  .popup.from-right.transition-in, .popup.from-right.transition-out {
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-delay: 0s;
    transition-delay: 0s; }
  .popup.from-right.transition-in {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .popup.from-right.transition-out {
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0); }

.popup-body {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  padding: 10px; }

.popup-header {
  height: 44px;
  line-height: 44px;
  position: relative;
  background-color: #fbfbfa; }
  .popup-header.top-bar {
    position: absolute; }
    .popup-header.top-bar ~ .popup-body {
      top: 44px; }
  .popup-header .close {
    position: absolute;
    height: 44px;
    width: 44px;
    line-height: 44px;
    right: 5px;
    top: 0;
    font-family: "iconfont";
    font-style: normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.2px;
    -moz-osx-font-smoothing: grayscale;
    font-size: 24px;
    text-align: center;
    color: #585c64; }
  .popup-header .close::before {
    content: "\e604"; }
  .popup-header .close:active {
    color: #ccc; }

.popup-title {
  line-height: 24px;
  padding: 10px 50px 10px 15px; }

.popup-footer {
  height: 44px;
  line-height: 44px;
  text-align: center;
  background-color: #fff; }
  .popup-footer.bottom-bar {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%; }
    .popup-footer.bottom-bar ~ .popup-body {
      bottom: 44px; }

/* popup end */

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcG9wdXAuc2NzcyIsImV4dC9fbWl4aW4uc2NzcyIsImV4dC9fYm9yZGVyLW1peGluLnNjc3MiLCJfc2V0dGluZy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7RUFLRTtBQStKRixZQUFZLENDdEZGO0VBTkYsUUFBUSxFQUFFLE1BQU87RUFDakIsV0FBVyxFQUFFLE1BQU87RUFDcEIsYUFBYSxFQUFFLFFBQVMsR0FNL0I7O0FDaEZEOzs7Ozs7OztFQVFFO0FGRUYsaUJBQWlCO0FBRWpCLE1BQU0sQ0FBQztFQUNILFFBQVEsRUFBRSxRQUFTO0VBQ25CLElBQUksRUFBRSxDQUFFO0VBQ1IsS0FBSyxFQUFFLENBQUU7RUFDVCxHQUFHLEVBQUUsQ0FBRTtFQUNQLE1BQU0sRUFBRSxDQUFFO0VBQ1YsS0FBSyxFQUFFLElBQUs7RUFDWixPQUFPLEVHd0JnQixJQUFJO0VIdkIzQixVQUFVLEVBQUUsSUFBSztFQUNqQixrQkFBa0IsRUFBRSxVQUFXO0VBQy9CLFVBQVUsRUFBRSxVQUFXO0VBQ3ZCLE9BQU8sRUFBRSxJQUFLO0VBQ2QsMkJBQTJCLEVBQUUsaUJBQWtCO0VBQy9DLG1CQUFtQixFQUFFLGlCQUFrQjtFQUN2QyxtQkFBbUIsRUFBRSxTQUFVO0VBQy9CLG1CQUFtQixFQUFFLDRCQUE2QjtFQUNsRCxRQUFRLEVBQUUsSUFBSztFQUNmLDBCQUEwQixFQUFFLEtBQU07RUFDbEMsZ0JBQWdCLEVBQUUsT0FBUSxHQUM3Qjs7QUFFRCxNQUFNLFNBQVMsQ0FBQztFQUNaLHdCQUF3QjtFQUN4QixpQkFBaUIsRUFBRSx3QkFBVztFQUM5QixTQUFTLEVBQUUsd0JBQVcsR0FrQnpCO0VBckJELE1BQU0sU0FBUyxBQUlWLGNBQWMsRUFKbkIsTUFBTSxTQUFTLEFBS1YsZUFBZSxDQUFDO0lBQ2IsMkJBQTJCLEVBQUUsS0FBTTtJQUNuQyxtQkFBbUIsRUFBRSxLQUFNO0lBQzNCLHdCQUF3QixFQUFFLEVBQUc7SUFDN0IsZ0JBQWdC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dW5qaW5jaGFuXG4qIEBEYXRlOiAgIDIwMTUtMTItMzAgMjM6NDA6MTJcbiogQExhc3QgTW9kaWZpZWQgYnk6ICAgc2h1bmppbmNoYW5cbiogQExhc3QgTW9kaWZpZWQgdGltZTogMjAxNi0wMS0yMyAwMzo0MDo1N1xuKi9cblxuQGNoYXJzZXQgXCJ1dGYtOFwiO1xuQGltcG9ydCBcIi4uL19zZXR0aW5nLnNjc3NcIjtcblxuLyogcG9wdXAgYmVnaW4gKi9cblxuLnBvcHVwIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHotaW5kZXg6ICR6aW5kZXgtcG9wdXA7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbi1wcm9wZXJ0eTogLXdlYmtpdC10cmFuc2Zvcm07XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogLXdlYmtpdC10cmFuc2Zvcm07XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtO1xuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybSwgLXdlYmtpdC10cmFuc2Zvcm07XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmM2Y0ZjU7XG59XG5cbi5wb3B1cC5mcm9tLXRvcCB7XG4gICAgLyog6aG26YOo5ruR5YWl5Yqo55S7ICovXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC0xMDAlLCAwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC0xMDAlLCAwKTtcbiAgICAmLnRyYW5zaXRpb24taW4sXG4gICAgJi50cmFuc2l0aW9uLW91dCB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvbjogNDAwbXM7XG4gICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDQwMG1zO1xuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb24tZGVsYXk6IDBzO1xuICAgICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwcztcbiAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKC4xNzUsIC44ODUsIC4zMiwgMS4xKTtcbiAgICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllciguMTc1LCAuODg1LCAuMzIsIDEuMSk7XG4gICAgfVxuICAgICYudHJhbnNpdGlvbi1pbiB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICB9XG4gICAgJi50cmFuc2l0aW9uLW91dCB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtMTAwJSwgMCk7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTEwMCUsIDApO1xuICAgIH1cbn1cblxuLnBvcHVwLmZyb20tYm90dG9tIHtcbiAgICAvKiDlupXpg6jmu5HlhaXliqjnlLsgKi9cbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTAwJSwgMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMDAlLCAwKTtcbiAgICAmLnRyYW5zaXRpb24taW4sXG4gICAgJi50cmFuc2l0aW9uLW91dCB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvbjogNDAwbXM7XG4gICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDQwMG1zO1xuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb24tZGVsYXk6IDBzO1xuICAgICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwcztcbiAgICB9XG4gICAgJi50cmFuc2l0aW9uLWluIHtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIH1cbiAgICAmLnRyYW5zaXRpb24tb3V0IHtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDEwMCUsIDApO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDEwMCUsIDApO1xuICAgIH1cbn1cblxuLnBvcHVwLmZyb20tbGVmdCB7XG4gICAgLyog5LuO5bem5ZCR5Y+z5ruR5YWl5Yqo55S7ICovXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcbiAgICAmLnRyYW5zaXRpb24taW4sXG4gICAgJi50cmFuc2l0aW9uLW91dCB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvbjogNDAwbXM7XG4gICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDQwMG1zO1xuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb24tZGVsYXk6IDBzO1xuICAgICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwcztcbiAgICB9XG4gICAgJi50cmFuc2l0aW9uLWluIHtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIH1cbiAgICAmLnRyYW5zaXRpb24tb3V0IHtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gICAgfVxufVxuXG4ucG9wdXAuZnJvbS1yaWdodCB7XG4gICAgLyog5LuO5bem5ZCR5Y+z5ruR5YWl5Yqo55S7ICovXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTAwJSwgMCwgMCk7XG4gICAgJi50cmFuc2l0aW9uLWluLFxuICAgICYudHJhbnNpdGlvbi1vdXQge1xuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb24tZHVyYXRpb246IDQwMG1zO1xuICAgICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA0MDBtcztcbiAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uLWRlbGF5OiAwcztcbiAgICAgICAgdHJhbnNpdGlvbi1kZWxheTogMHM7XG4gICAgfVxuICAgICYudHJhbnNpdGlvbi1pbiB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICB9XG4gICAgJi50cmFuc2l0aW9uLW91dCB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKTtcbiAgICB9XG59XG5cbi5wb3B1cC1ib2R5IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5cbi5wb3B1cC1oZWFkZXIge1xuICAgIGhlaWdodDogNDRweDtcbiAgICBsaW5lLWhlaWdodDogNDRweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZiZmJmYTtcbiAgICAmLnRvcC1iYXIge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICYgfiAucG9wdXAtYm9keSB7XG4gICAgICAgICAgICB0b3A6IDQ0cHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmNsb3NlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBoZWlnaHQ6IDQ0cHg7XG4gICAgICAgIHdpZHRoOiA0NHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogNDRweDtcbiAgICAgICAgcmlnaHQ6IDVweDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBmb250LWZhbWlseTogXCJpY29uZm9udFwiO1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoOiAwLjJweDtcbiAgICAgICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGNvbG9yOiAjNTg1YzY0O1xuICAgIH1cbiAgICAuY2xvc2U6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXFxlNjA0XCI7XG4gICAgfVxuICAgIC5jbG9zZTphY3RpdmUge1xuICAgICAgICBjb2xvcjogI2NjYztcbiAgICB9XG59XG5cbi5wb3B1cC10aXRsZSB7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgcGFkZGluZzogMTBweCA1MHB4IDEwcHggMTVweDtcbiAgICBAaW5jbHVkZSBlbGxpcHNpcygpO1xufVxuXG4ucG9wdXAtZm9vdGVyIHtcbiAgICBoZWlnaHQ6IDQ0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDQ0cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgJi5ib3R0b20tYmFyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfiAucG9wdXAtYm9keSB7XG4gICAgICAgICAgICBib3R0b206IDQ0cHg7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuLyogcG9wdXAgZW5kICovXG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIFxuLy8gbWl4aW4gc2Nzc1xuLy8g5YyF5ous5bi455So55qEbWl4aW4sICUsIEBmdW5jdGlvbiDlj4rovoXliqnnmoRidG7lkozog4zmma/lm77niYdpY29uXG4vLyBtaXhpbu+8jOmAmui/h0BpbmNsdWRl6LCD55So77yM5qC35byP6YCa6L+H5ou36LSd55qE5pa55byP5L2/55So77yM5bCk5YW26YCC55So5LqO5Lyg6YCS5Y+C5pWwXG4vLyAl77yM6YCa6L+HQGV4dGVuZOiwg+eUqO+8jOagt+W8j+mAmui/h+e7hOWQiOeUs+aYjueahOaWueW8j+S9v+eUqO+8jOmAgueUqOS6juS4jeS8oOWPguaVsOeahOS7o+eggeeJh+autSAgXG4vLyBAZnVuY3Rpb27vvIzov5Tlm57kuIDkuKrlgLzvvIznlKjkuo7osIPnlKhcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gbWl4aW4gJiAlXG4vLyDml6LlrprkuYnkuoZtaXhpbuS5n+WumuS5ieS6hiXvvIzmoLnmja7pnIDmsYLkvb/nlKhAaW5jbHVkZeaIlkBleHRlbmTosIPnlKhcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQ2VudGVyLWFsaWduIGEgYmxvY2sgbGV2ZWwgZWxlbWVudFxuQG1peGluIGNlbnRlci1ibG9jaygkZXh0ZW5kOiB0cnVlKSB7XG4gICAgQGlmICRleHRlbmQge1xuICAgICAgICBAZXh0ZW5kICVjZW50ZXItYmxvY2s7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB9XG59XG5cbiVjZW50ZXItYmxvY2sge1xuICAgIEBpbmNsdWRlIGNlbnRlci1ibG9jayhmYWxzZSk7XG59XG5cbi8vIGNsZWFyZml4XG5AbWl4aW4gY2xlYXJmaXgoJGV4dGVuZDogdHJ1ZSkge1xuICAgIEBpZiAkZXh0ZW5kIHtcbiAgICAgICAgQGV4dGVuZCAlY2xlYXJmaXg7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICAgJjpiZWZvcmUsXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgICB9XG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbiVjbGVhcmZpeCB7XG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoZmFsc2UpO1xufVxuXG4vLyBIaWRlIG9ubHkgdmlzdWFsbHksIGJ1dCBoYXZlIGl0IGF2YWlsYWJsZSBmb3Igc2NyZWVucmVhZGVyc1xuLy8g5Y+q6ZqQ6JeP5LqO6KeG6KeJ77yM5bGP5bmV5rWP6KeI5Zmo5Y+v5Lul6ZiF6K+7XG5AbWl4aW4gaGlkZGVuLWNsaXAoJGV4dGVuZDogdHJ1ZSkge1xuICAgIEBpZiAkZXh0ZW5kIHtcbiAgICAgICAgQGV4dGVuZCAlaGlkZGVuLWNsaXA7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG4gICAgfVxufVxuXG4laGlkZGVuLWNsaXAge1xuICAgIEBpbmNsdWRlIGhpZGRlbi1jbGlwKGZhbHNlKTtcbn1cblxuLy8gZWxsaXBzaXNcbkBtaXhpbiBlbGxpcHNpcygkZXh0ZW5kOiB0cnVlKSB7XG4gICAgQGlmICRleHRlbmQge1xuICAgICAgICBAZXh0ZW5kICVlbGxpcHNpcztcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB9XG59XG5cbiVlbGxpcHNpcyB7XG4gICAgQGluY2x1ZGUgZWxsaXBzaXMoZmFsc2UpO1xufVxuXG4vLyDlj6rmnIl3ZWJraXTmlK/mjIHlpJrooYznnIHnlaXlj7dcbkBtaXhpbiBlbGxpcHNpcy1saW5lKCRsaW5lOiAyKSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICAtd2Via2l0LWxpbmUtY2xhbXA6ICRsaW5lO1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG59XG5cbi8vIHdvcmQtYnJlYWtcbi8vIOeUqOS6jumTvuaOpeWcsOWdgOW8uuWItuaNouihjFxuQG1peGluIHdvcmQtYnJlYWsoJGV4dGVuZDogdHJ1ZSkge1xuICAgIEBpZiAkZXh0ZW5kIHtcbiAgICAgICAgQGV4dGVuZCAld29yZC1icmVhaztcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbiAgICB9XG59XG5cbiV3b3JkLWJyZWFrIHtcbiAgICBAaW5jbHVkZSB3b3JkLWJyZWFrKGZhbHNlKTtcbn1cblxuLy8gZGlzYWJsZWRcbi8vIOemgeeUqOagt+W8j++8jOWKoCFpbXBvcnRhbnRcbkBtaXhpbiBkaXNhYmxlZCgpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICM2NjYgIWltcG9ydGFudDtcbiAgICBjdXJzb3I6IGRlZmF1bHQgIWltcG9ydGFudDtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4lZGlzYWJsZWQge1xuICAgIEBpbmNsdWRlIGRpc2FibGVkO1xufVxuXG4vLyBmaXhlZCB0b3AgJiBib3R0b21cbkBtaXhpbiBmaXhlZCgkcG9zOiAwKSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgQGlmICRwb3MgPT0gYm90dG9tIHtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAgIHRvcDogJHBvcztcbiAgICB9XG59XG5cbiVmaXhlZC10b3Age1xuICAgIEBpbmNsdWRlIGZpeGVkO1xufVxuXG4lZml4ZWQtYm90dG9tIHtcbiAgICBAaW5jbHVkZSBmaXhlZCgkcG9zOiBib3R0b20pO1xufVxuXG4vLyBqdXN0aWZ5XG5AbWl4aW4ganVzdGlmeSgkZXh0ZW5kOiB0cnVlKSB7XG4gICAgQGlmICRleHRlbmQge1xuICAgICAgICBAZXh0ZW5kICVqdXN0aWZ5O1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICB9XG59XG5cbiVqdXN0aWZ5IHtcbiAgICBAaW5jbHVkZSBqdXN0aWZ5KGZhbHNlKTtcbn1cblxuLy8gbWl4aW5cbi8vIOWPquWumuS5ieS6hm1peGlu77yM5omA5Lul5Y+q6IO96YCa6L+HQGluY2x1ZGXmnaXosIPnlKhcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gdGFibGUg562J5YiGXG5AbWl4aW4gZXF1YWwtdGFibGUoJGNoaWxkcmVuOiBsaSkge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIHRhYmxlLWxheW91dDogZml4ZWQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgJGNoaWxkcmVuRWxlOiBsaSBkaXYgcCBhIHNwYW4gc3Ryb25nO1xuICAgIEBpZiBpbmRleCgkY2hpbGRyZW5FbGUsICRjaGlsZHJlbikge1xuICAgICAgICAjeyRjaGlsZHJlbn0ge1xuICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAgIC4jeyRjaGlsZHJlbn0ge1xuICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gZmxleCDnrYnliIZcbkBtaXhpbiBlcXVhbC1mbGV4KCRjaGlsZHJlbjogbGkpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgICRjaGlsZHJlbkVsZTogbGkgZGl2IHAgYSBzcGFuIHN0cm9uZztcbiAgICBAaWYgaW5kZXgoJGNoaWxkcmVuRWxlLCAkY2hpbGRyZW4pIHtcbiAgICAgICAgI3skY2hpbGRyZW59IHtcbiAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgIH1cbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgICAuI3skY2hpbGRyZW59IHtcbiAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIGZsZXggY2VudGVyXG5AbWl4aW4gY2VudGVyLWZsZXgoJGRpcmVjdGlvbjogYm90aCkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgQGlmICRkaXJlY3Rpb24gPT0gYm90aCB7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICBAZWxzZSBpZiAkZGlyZWN0aW9uID09IHgge1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG4gICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSB5IHtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG59XG5cbi8vIHRyYW5zbGF0ZSBjZW50ZXJcbkBtaXhpbiBjZW50ZXItdHJhbnNsYXRlKCRkaXJlY3Rpb246IGJvdGgpIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgQGlmICRkaXJlY3Rpb24gPT0gYm90aCB7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCk7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKTtcbiAgICB9XG4gICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSB4IHtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC01MCUsIDAsIDApO1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTUwJSwgMCwgMCk7XG4gICAgfVxuICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT0geSB7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC01MCUsIDApO1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTUwJSwgMCk7XG4gICAgfVxufVxuXG4vLyB0cmlhbmdsZSDkuInop5Lnrq3lpLRcbiV0cmlhbmdsZS1iYXNpYyB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBoZWlnaHQ6IDA7XG4gICAgd2lkdGg6IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuQG1peGluIHRyaWFuZ2xlKCRkaXJlY3Rpb246IHRvcCwgJGJvcmRlcldpZHRoOiA2cHgsICRib3JkZXJDb2xvcjogI2RlZGVkZSkge1xuICAgIEBleHRlbmQgJXRyaWFuZ2xlLWJhc2ljO1xuICAgIEBpZiAkZGlyZWN0aW9uID09IHRvcCB7XG4gICAgICAgIGJvcmRlci1ib3R0b206ICRib3JkZXJXaWR0aCBzb2xpZCAkYm9yZGVyQ29sb3I7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAkYm9yZGVyV2lkdGggZGFzaGVkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmlnaHQ6ICRib3JkZXJXaWR0aCBkYXNoZWQgdHJhbnNwYXJlbnQ7XG4gICAgfVxuICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gcmlnaHQge1xuICAgICAgICBib3JkZXItbGVmdDogJGJvcmRlcldpZHRoIHNvbGlkICRib3JkZXJDb2xvcjtcbiAgICAgICAgYm9yZGVyLXRvcDogJGJvcmRlcldpZHRoIGRhc2hlZCB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogJGJvcmRlcldpZHRoIGRhc2hlZCB0cmFuc3BhcmVudDtcbiAgICB9XG4gICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSBib3R0b20ge1xuICAgICAgICBib3JkZXItdG9wOiAkYm9yZGVyV2lkdGggc29saWQgJGJvcmRlckNvbG9yO1xuICAgICAgICBib3JkZXItbGVmdDogJGJvcmRlcldpZHRoIGRhc2hlZCB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAkYm9yZGVyV2lkdGggZGFzaGVkIHRyYW5zcGFyZW50O1xuICAgIH1cbiAgICBAZWxzZSBpZiAkZGlyZWN0aW9uID09IGxlZnQge1xuICAgICAgICBib3JkZXItcmlnaHQ6ICRib3JkZXJXaWR0aCBzb2xpZCAkYm9yZGVyQ29sb3I7XG4gICAgICAgIGJvcmRlci10b3A6ICRib3JkZXJXaWR0aCBkYXNoZWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1ib3R0b206ICRib3JkZXJXaWR0aCBkYXNoZWQgdHJhbnNwYXJlbnQ7XG4gICAgfVxufVxuXG4vLyBhcnJvdyDmlrnlkJHnrq3lpLRcbkBtaXhpbiBhcnJvdygkc2l6ZTogMTBweCwgJGRpcmVjdGlvbjogcmlnaHQsICRib3JkZXJXaWR0aDogMnB4LCAkYm9yZGVyQ29sb3I6ICNkZWRlZGUpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB3aWR0aDogJHNpemU7XG4gICAgaGVpZ2h0OiAkc2l6ZTtcbiAgICBAaWYgJGRpcmVjdGlvbiA9PSB0b3Age1xuICAgICAgICBib3JkZXItdG9wOiAkYm9yZGVyV2lkdGggc29saWQgJGJvcmRlckNvbG9yO1xuICAgICAgICBib3JkZXItcmlnaHQ6ICRib3JkZXJXaWR0aCBzb2xpZCAkYm9yZGVyQ29sb3I7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgfVxuICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gcmlnaHQge1xuICAgICAgICBib3JkZXItdG9wOiAkYm9yZGVyV2lkdGggc29saWQgJGJvcmRlckNvbG9yO1xuICAgICAgICBib3JkZXItcmlnaHQ6ICRib3JkZXJXaWR0aCBzb2xpZCAkYm9yZGVyQ29sb3I7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB9XG4gICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSBib3R0b20ge1xuICAgICAgICBib3JkZXItbGVmdDogJGJvcmRlcldpZHRoIHNvbGlkICRib3JkZXJDb2xvcjtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogJGJvcmRlcldpZHRoIHNvbGlkICRib3JkZXJDb2xvcjtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICB9XG4gICAgQGlmICRkaXJlY3Rpb24gPT0gbGVmdCB7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAkYm9yZGVyV2lkdGggc29saWQgJGJvcmRlckNvbG9yO1xuICAgICAgICBib3JkZXItYm90dG9tOiAkYm9yZGVyV2lkdGggc29saWQgJGJvcmRlckNvbG9yO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgfVxufVxuXG4vLyByZW1cbkBtaXhpbiByZW0oJHB4OiAxLjQsICRwcm9wZXJ0eTogZm9udC1zaXplKSB7XG4gICAgI3skcHJvcGVydHl9OiAkcHggKiAxMHB4O1xuICAgICN7JHByb3BlcnR5fTogI3skcHh9cmVtO1xufVxuXG4vLyBodHRwOi8vd3d3LmNzczNmaWxlcy5jb20vZm9udC9cbi8vIDEgVGhlIGVvdCBmb250ZmlsZS4gQ2FuIGJlIG9taXR0ZWQgaWYgeW91IGRvbmB0IHdhbnQgdG8gc3VwcG9ydCBJbnRlcm5ldCBFeHBsb3JlciBwcmlvciB0byB2ZXJzaW9uIDkgKGluY2x1ZGluZyBzZW1pY29sb24pLlxuLy8gMiBDYW4gYWxzbyBiZSBvbWl0dGVkIGZvciBJbnRlcm5ldCBFeHBsb3JlciA8IDkuID9pZWZpeCBwcmV2ZW50cyBJRTYgZnJvbSBpbnRlcnByZXRpbmcgYWxsIG9mIHRoZSBmb2xsb3dpbmcuIElmIHRoZSB3aG9sZSBJRSBmYW1pbHkgKDYgdG8gOSkgc2hvdWxkIGJlIHN1cHBvcnRlZCwgMSBhbmQgMiBhcmUgbmVlZGVkLlxuLy8gMyBDYW4gYmUgb21pdHRlZCBpZiBpUGFkIHZlcnNpb25zIHByaW9yIHRvIGlPUyA0LjIgc2hvdWxkbuKAmXQgYmUgc3VwcG9ydGVkLiBcbi8vIDQgVGhlIHR0ZiBmb250ZmlsZS4gTmVjZXNzYXJ5IHRvIHN1cHBvcnQgKE1vYmlsZSkgU2FmYXJpIGFuZCBPcGVyYS4gXG4vLyA1IFRoZSB3b2ZmIGZvbnRmaWxlIGZvciBhbGwgbW9kZXJuIGJyb3dzZXJzIChiZXN0IGNob2ljZSkuXG5AbWl4aW4gZm9udC1mYWNlKCRmb250RmFjZUZhbWlseSwgJGZvbnRGYWNlUGF0aCwgJHdlaWdodDogbm9ybWFsLCAkc3R5bGU6IG5vcm1hbCkge1xuICAgIEBmb250LWZhY2Uge1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnRGYWNlRmFtaWx5O1xuICAgICAgICBmb250LXdlaWdodDogJHdlaWdodDtcbiAgICAgICAgZm9udC1zdHlsZTogJHN0eWxlO1xuICAgICAgICBzcmM6IHVybChcIiN7JGZvbnRGYWNlUGF0aH0uZW90XCIpOyAvLyAxXG4gICAgICAgIHNyYzogdXJsKFwiI3skZm9udEZhY2VQYXRofS5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVvdFwiKSwgdXJsKFwiI3skZm9udEZhY2VQYXRofS5zdmcjI3skZm9udEZhY2VGYW1pbHl9XCIpIGZvcm1hdChcInN2Z1wiKSwgdXJsKFwiI3skZm9udEZhY2VQYXRofS53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIiN7JGZvbnRGYWNlUGF0aH0udHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICAgIH1cbn1cblxuLy8gJVxuLy8g5Y+q5a6a5LmJ5LqGJe+8jOaJgOS7peWPquiDvemAmui/h0BleHRlbmTmnaXosIPnlKhcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIOetieWIhuWIl1xuLy8g5Y+v5Lul5L2/55SoZXF1YWwtZmxleOaIlmVxdWFsLXRhYmxl77yM6buY6K6k5a2Q5YWD57Sg5Li6bGlcbiVlcXVhbC1jb2wge1xuICAgIEBpbmNsdWRlIGVxdWFsLXRhYmxlO1xufVxuXG4vLyBpdGVtIGFycm93LCDlj7Pkvqfnrq3lpLTot7PovazmjIflkJFcbiVpdGVtLWFycm93IHtcbiAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIEBpbmNsdWRlIGFycm93O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAxNXB4O1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgbWFyZ2luLXRvcDogLTFweDtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSgwLCAtNTAlKTtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB9XG59XG5cbi8vIOS4i+mdoueahOWHoOS4qiXvvIznlLHkuo7niYjmnKzmiJbliY3nvIDvvIzmiYDku6Xorr7orqHmiJAlXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBmbGV4XG4lZGlzcGxheS1mbGV4IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xufVxuXG4vLyBhbGwtdHJhbnNpdGlvblxuJXRyYW5zaXRpb24tYWxsIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbn1cblxuLy8gdHJhbnNsYXRlM2RcbiV0cmFuc2xhdGUzZCB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbn1cblxuLy8gcGFnZSBzd2l0Y2hcbiVwYWdlLW91dCB7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHMgY3ViaWMtYmV6aWVyKDAuNDIsIDAsIDAuNTgsIDEpIDAuMXM7XG59XG5cbiVwYWdlLWluIHtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBjdWJpYy1iZXppZXIoMC40MiwgMCwgMC41OCwgMSk7XG59XG5cbi8vIGJ0blxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBidG4tYmFzaWNcbi8vIOaMiemSruWfuuacrOagt+W8j++8jOiBlOWQiOeUs+aYjlxuJWJ0bi1iYXNpYyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXI6IDAgbm9uZTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xufSIsIi8qIFxuKiBAQXV0aG9yOiBzaHVuamluY2hhblxuKiBARGF0ZTogICAyMDE2LTAxLTIzIDAxOjAxOjAzXG4qIEBMYXN0IE1vZGlmaWVkIGJ5OiAgIHNodW5qaW5jaGFuXG4qIEBMYXN0IE1vZGlmaWVkIHRpbWU6IDIwMTYtMDEtMjUgMDA6MzQ6Mzlcbiog5qih5ouf5LiA5YOP57SgXG4qIEB1c2FnZTpcbiogQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikgeyBAaW5jbHVkZSBib3JkZXIoYm90dG9tLCAjYWJjZGVmKSB9XG4qL1xuXG4vLyDnurXlkJFcbiVib3JkZXItcG9ydHJhaXQge1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogMTAwJSAxcHg7IC8qbm8qL1xufVxuLy8g5qiq5ZCRXG4lYm9yZGVyLWxhbmRzY2FwZSB7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC15O1xuICAgIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiAxcHggMTAwJTsgLypubyovXG59XG5AbWl4aW4gYm9yZGVyKCRkaXJlY3Rpb246IHRvcCwgJGJvcmRlckNvbG9yOiAkY29sb3ItYm9yZGVyKSB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikge1xuICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgIEBpZiAkZGlyZWN0aW9uID09IHRvcCB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0IHRvcDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IGJvdHRvbSwgbGVmdCB0b3AsIGNvbG9yLXN0b3AoMC41LCB0cmFuc3BhcmVudCksIGNvbG9yLXN0b3AoMC41LCAkYm9yZGVyQ29sb3IpLCB0bygkYm9yZGVyQ29sb3IpKTtcbiAgICAgICAgICAgIC8vIEBleHRlbmQgYm9yZGVyLXBvcnRyYWl0KCk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gICAgICAgICAgICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogMTAwJSAxcHg7IC8qbm8qL1xuICAgICAgICB9XG4gICAgICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gYm90dG9tIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgYm90dG9tO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgY29sb3Itc3RvcCgwLjUsIHRyYW5zcGFyZW50KSwgY29sb3Itc3RvcCgwLjUsICRib3JkZXJDb2xvciksIHRvKCRib3JkZXJDb2xvcikpO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICAgICAgICAgICAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IDEwMCUgMXB4OyAvKm5vKi9cbiAgICAgICAgfVxuICAgICAgICBAZWxzZSBpZiAkZGlyZWN0aW9uID09IGxlZnQge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCB0b3A7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgcmlnaHQgdG9wLCBsZWZ0IHRvcCwgY29sb3Itc3RvcCgwLjUsIHRyYW5zcGFyZW50KSwgY29sb3Itc3RvcCgwLjUsICRib3JkZXJDb2xvciksIHRvKCRib3JkZXJDb2xvcikpO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC15O1xuICAgICAgICAgICAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IDFweCAxMDAlOyAvKm5vKi9cbiAgICAgICAgfVxuICAgICAgICBAZWxzZSBpZiAkZGlyZWN0aW9uID09IHJpZ2h0IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IHRvcDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgcmlnaHQgdG9wLCBjb2xvci1zdG9wKDAuNSwgdHJhbnNwYXJlbnQpLCBjb2xvci1zdG9wKDAuNSwgJGJvcmRlckNvbG9yKSwgdG8oJGJvcmRlckNvbG9yKSk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXk7XG4gICAgICAgICAgICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogMXB4IDEwMCU7IC8qbm8qL1xuICAgICAgICB9XG4gICAgICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gdGIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgYm90dG9tLCBsZWZ0IHRvcCwgY29sb3Itc3RvcCgwLjUsIHRyYW5zcGFyZW50KSwgY29sb3Itc3RvcCgwLjUsICRib3JkZXJDb2xvciksIHRvKCRib3JkZXJDb2xvcikpLCAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBjb2xvci1zdG9wKDAuNSwgdHJhbnNwYXJlbnQpLCBjb2xvci1zdG9wKDAuNSwgJGJvcmRlckNvbG9yKSwgdG8oJGJvcmRlckNvbG9yKSk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AsIGJvdHRvbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgICAgICAgICAgIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiAxMDAlIDFweDsgLypubyovXG4gICAgICAgIH1cbiAgICAgICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSBhbGwge1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCBib3R0b20sIGxlZnQgdG9wLCBjb2xvci1zdG9wKDAuNSwgdHJhbnNwYXJlbnQpLCBjb2xvci1zdG9wKDAuNSwgJGJvcmRlckNvbG9yKSwgdG8oJGJvcmRlckNvbG9yKSksIC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgcmlnaHQgdG9wLCBjb2xvci1zdG9wKDAuNSwgdHJhbnNwYXJlbnQpLCBjb2xvci1zdG9wKDAuNSwgJGJvcmRlckNvbG9yKSwgdG8oJGJvcmRlckNvbG9yKSksIC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGNvbG9yLXN0b3AoMC41LCB0cmFuc3BhcmVudCksIGNvbG9yLXN0b3AoMC41LCAkYm9yZGVyQ29sb3IpLCB0bygkYm9yZGVyQ29sb3IpKSwgLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIHJpZ2h0IHRvcCwgbGVmdCB0b3AsIGNvbG9yLXN0b3AoMC41LCB0cmFuc3BhcmVudCksIGNvbG9yLXN0b3AoMC41LCAkYm9yZGVyQ29sb3IpLCB0bygjZGRkKSk7XG4gICAgICAgICAgICAgICAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IDEwMCUgMXB4LCAxcHggMTAwJSwgMTAwJSAxcHgsIDFweCAxMDAlOyAvKm5vKi9cbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMXB4LCAxcHggMTAwJSwgMTAwJSAxcHgsIDFweCAxMDAlOyAvKm5vKi9cbiAgICAgICAgICAgICAgICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogMTAwJSAxcHgsIDFweCAxMDAlLCAxMDAlIDFweCwgMXB4IDEwMCU7IC8qbm8qL1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxcHgsIDFweCAxMDAlLCAxMDAlIDFweCwgMXB4IDEwMCU7IC8qbm8qL1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDFweDsgLypubyovXG4gICAgICAgICAgICAgICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgICAgIHotaW5kZXg6IDEwO1xuICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG5AaW1wb3J0IFwiZXh0L19taXhpbi5zY3NzXCI7XG5AaW1wb3J0IFwiZXh0L19ib3JkZXItbWl4aW4uc2Nzc1wiO1xuXG5cbi8vIGZvbnTnm7jlhbNcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXG4kZm9udC1zaXplOiAgICAgICAgICAgICAgICAgICAgICAgMTRweCAhZGVmYXVsdDsgXG4kZm9udC1saW5lLWhlaWdodDogICAgICAgICAgICAgICAgMS41ICFkZWZhdWx0O1xuJGZvbnQtZmFtaWx5OiAgICAgICAgICAgICAgICAgICAgIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBTVEhlaVRpLCBBcmlhbCwgc2Fucy1zZXJpZiAhZGVmYXVsdDtcblxuXG4vLyDkuLvoibJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRjb2xvci1wcmltYXJ5OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAjMDg5NGVjICFkZWZhdWx0O1xuJGNvbG9yLWRhbmdlcjogICAgICAgICAgICAgICAgICAgICAgICAgICAgICNmNjM4M2EgIWRlZmF1bHQ7XG4kY29sb3Itd2FybmluZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgI2Y2MCAhZGVmYXVsdDtcbiRjb2xvci1zdWNjZXNzOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAjNGNkOTY0ICFkZWZhdWx0O1xuXG4kY29sb3ItcHJpbWFyeS1hY3RpdmU6ICAgICAgICAgICAgICAgICAgICAgIzBhOGRkZiAhZGVmYXVsdDtcbiRjb2xvci1kYW5nZXItYWN0aXZlOiAgICAgICAgICAgICAgICAgICAgICBkYXJrZW4oJGNvbG9yLWRhbmdlciwgMTAlKSAhZGVmYXVsdDtcbiRjb2xvci13YXJuaW5nLWFjdGl2ZTogICAgICAgICAgICAgICAgICAgICBkYXJrZW4oJGNvbG9yLXdhcm5pbmcsIDEwJSkgIWRlZmF1bHQ7XG4kY29sb3Itc3VjY2Vzcy1hY3RpdmU6ICAgICAgICAgICAgICAgICAgICAgZGFya2VuKCRjb2xvci1zdWNjZXNzLCAxMCUpICFkZWZhdWx0O1xuXG4kY29sb3ItYm9yZGVyOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI2RiZGJkYiAhZGVmYXVsdDsgIC8vIOWIhuWJsue6v+eahOminOiJslxuJGNvbG9yLWJnOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNmM2Y0ZjUgIWRlZmF1bHQ7IC8vIOiDjOaZr+iJslxuJGNvbG9yLXRleHQ6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMzZDQxNDUgIWRlZmF1bHQ7IC8vIOaWh+ahiOiJslxuJGNvbG9yLXRleHQtc2Vjb25kYXJ5OiAgICAgICAgICAgICAgICAgICAgICM1ZjY0NmUgIWRlZmF1bHQ7IC8vIOasoee6p+aWh+ahiFxuJGNvbG9yLXRleHQtZ3JheTogICAgICAgICAgICAgICAgICAgICAgICAgICM5OTkgIWRlZmF1bHQ7IC8vIOeBsOiJsuaWh+ahiFxuJGNvbG9yLXRleHQtZ3JheS1saWdodDogICAgICAgICAgICAgICAgICAgICNjY2MgIWRlZmF1bHQ7IC8vIOabtOeBsOiJsuaWh+ahiFxuXG5cbi8vIOmTvuaOpeiJslxuJGNvbG9yLWxpbms6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb2xvci1wcmltYXJ5ICFkZWZhdWx0OyAvLyDpk77mjqXoibLmnInlj6/og73kuI3lkIzkuo7kuLvoibJcbiRjb2xvci1saW5rLWFjdGl2ZTogICAgICAgICAgICAgICAgICAgICAgICAkY29sb3ItcHJpbWFyeS1hY3RpdmUgIWRlZmF1bHQ7IC8vIOmTvuaOpeiJsuacieWPr+iDveS4jeWQjOS6juS4u+iJslxuXG5cbi8vIHotaW5kZXhcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gXG4kemluZGV4LWRyb3Bkb3duOiAgICAgICAgICAxMDAwICFkZWZhdWx0O1xuJHppbmRleC1uYXZiYXItZml4ZWQ6ICAgICAgMTAyMCAhZGVmYXVsdDtcbiR6aW5kZXgtYmFja2Ryb3A6ICAgICAgICAgIDEwMzAgIWRlZmF1bHQ7XG4kemluZGV4LXBvcHVwOiAgICAgICAgICAgICAxMDQwICFkZWZhdWx0O1xuJHppbmRleC1tb2RhbDogICAgICAgICAgICAgMTA1MCAhZGVmYXVsdDtcbiR6aW5kZXgtcG9wb3ZlcjogICAgICAgICAgIDEwNjAgIWRlZmF1bHQ7XG4kemluZGV4LWRpYWxvZzogICAgICAgICAgICAxMDcwICFkZWZhdWx0O1xuJHppbmRleC1sb2FkZXI6ICAgICAgICAgICAgMTA4MCAhZGVmYXVsdDtcbiR6aW5kZXgtdG9hc3Q6ICAgICAgICAgICAgIDEwOTAgIWRlZmF1bHQ7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
