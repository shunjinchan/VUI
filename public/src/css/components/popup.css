@charset "UTF-8";
/* 
* @Author: shunjinchan
* @Date:   2015-12-30 23:40:12
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-23 03:40:57
*/
/* 
* @Author: shunjinchan
* @Date:   2016-01-23 01:01:22
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-24 00:15:35
*/
.popup-title {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis; }

/* 
* @Author: shunjinchan
* @Date:   2016-01-23 01:01:03
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-23 01:54:51
* 模拟一像素
* @usage:
* @media screen and (-webkit-min-device-pixel-ratio: 2) { @include border(bottom, #abcdef) }
*/
/* popup begin */
.popup {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  z-index: 1040;
  background: #fff;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: none;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  background-color: #f3f4f5; }

.popup.from-top {
  /* 顶部滑入动画 */
  -webkit-transform: translate3d(0, -100%, 0);
  transform: translate3d(0, -100%, 0); }
  .popup.from-top.transition-in, .popup.from-top.transition-out {
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-delay: 0s;
    transition-delay: 0s;
    -webkit-transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.1);
    transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.1); }
  .popup.from-top.transition-in {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .popup.from-top.transition-out {
    -webkit-transform: translate3d(0, -100%, 0);
    transform: translate3d(0, -100%, 0); }

.popup.from-bottom {
  /* 底部滑入动画 */
  -webkit-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0); }
  .popup.from-bottom.transition-in, .popup.from-bottom.transition-out {
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-delay: 0s;
    transition-delay: 0s; }
  .popup.from-bottom.transition-in {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .popup.from-bottom.transition-out {
    -webkit-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0); }

.popup.from-left {
  /* 从左向右滑入动画 */
  -webkit-transform: translate3d(-100%, 0, 0);
  transform: translate3d(-100%, 0, 0); }
  .popup.from-left.transition-in, .popup.from-left.transition-out {
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-delay: 0s;
    transition-delay: 0s; }
  .popup.from-left.transition-in {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .popup.from-left.transition-out {
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }

.popup.from-right {
  /* 从左向右滑入动画 */
  -webkit-transform: translate3d(100%, 0, 0);
  transform: translate3d(100%, 0, 0); }
  .popup.from-right.transition-in, .popup.from-right.transition-out {
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-delay: 0s;
    transition-delay: 0s; }
  .popup.from-right.transition-in {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .popup.from-right.transition-out {
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0); }

.popup-body {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  padding: 10px; }

.popup-header {
  height: 44px;
  line-height: 44px;
  position: relative;
  background-color: #fbfbfa; }
  .popup-header.top-bar {
    position: absolute; }
    .popup-header.top-bar ~ .popup-body {
      top: 44px; }
  .popup-header .close {
    position: absolute;
    height: 44px;
    width: 44px;
    line-height: 44px;
    right: 5px;
    top: 0;
    font-family: "iconfont";
    font-style: normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.2px;
    -moz-osx-font-smoothing: grayscale;
    font-size: 24px;
    text-align: center;
    color: #585c64; }
  .popup-header .close::before {
    content: "\e604"; }
  .popup-header .close:active {
    color: #ccc; }

.popup-title {
  line-height: 24px;
  padding: 10px 50px 10px 15px; }

.popup-footer {
  height: 44px;
  line-height: 44px;
  text-align: center;
  background-color: #fff; }
  .popup-footer.bottom-bar {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%; }
    .popup-footer.bottom-bar ~ .popup-body {
      bottom: 44px; }

/* popup end */

/*# sourceMappingURL=data:application/json;base64, */
