@charset "UTF-8";
/* 
* @Author: shunjinchan
* @Date:   2015-12-27 17:37:48
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-06 21:57:19
*/
/* 
* @Author: shunjinchan
* @Date:   2016-01-23 01:01:03
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-25 00:34:39
* 模拟一像素
* @usage:
* @media screen and (-webkit-min-device-pixel-ratio: 2) { @include border(bottom, #abcdef) }
*/
/* toast begin */
.toast {
  background-color: rgba(0, 0, 0, 0.85);
  color: #fff;
  text-align: center;
  border-radius: 4px;
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 1090;
  padding: 10px 20px;
  max-width: 200px;
  width: auto;
  opacity: 0;
  -webkit-transform: translate3d(0, 0, 0) scale(1.185);
  transform: translate3d(0, 0, 0) scale(1.185);
  -webkit-transition-property: -webkit-transform, opacity;
  -webkit-transition-property: opacity, -webkit-transform;
  transition-property: opacity, -webkit-transform;
  transition-property: transform, opacity;
  transition-property: transform, opacity, -webkit-transform; }
  .toast.transition-in {
    opacity: 1;
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transform: translate3d(0, 0, 0) scale(1);
    transform: translate3d(0, 0, 0) scale(1); }
  .toast.transition-out {
    opacity: 0;
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transform: translate3d(0, 0, 0) scale(0.815);
    transform: translate3d(0, 0, 0) scale(0.815); }

.toast-title {
  font-weight: normal;
  font-size: 14px; }

.toast-body {
  font-size: 12px;
  margin-top: 5px; }

.toast-white {
  background-color: rgba(255, 255, 255, 0.95);
  color: #222; }

/* toast end */

/*# sourceMappingURL=data:application/json;base64, */
