/* 
* @Author: shunjinchan
* @Date:   2015-12-27 17:37:48
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-05 19:59:18
*/
/* dialog begin */
.dialog {
  width: 270px;
  background-color: rgba(255, 255, 255, 0.9);
  text-align: center;
  border-radius: 6px;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -135px;
  z-index: 1070;
  opacity: 0;
  -webkit-transform: translate3d(0, 0, 0) scale(1.185);
  transform: translate3d(0, 0, 0) scale(1.185);
  -webkit-transition-property: -webkit-transform, opacity;
  -webkit-transition-property: opacity, -webkit-transform;
  transition-property: opacity, -webkit-transform;
  transition-property: transform, opacity;
  transition-property: transform, opacity, -webkit-transform; }
  .dialog.vertical-button .dialog-footer {
    height: auto;
    display: block; }
  .dialog.vertical-button .dialog-button {
    display: block;
    width: 100%; }
    .dialog.vertical-button .dialog-button:not(:first-child)::before {
      position: absolute;
      content: "";
      top: 0;
      left: 0;
      right: 0;
      bottom: auto;
      width: 100%;
      border-top: 1px solid #dbdbdb;
      -webkit-transform: scaleY(0.5);
      transform: scaleY(0.5); }

.dialog.scale.transition-in {
  opacity: 1;
  -webkit-transition-duration: 400ms;
  transition-duration: 400ms;
  -webkit-transform: translate3d(0, 0, 0) scale(1);
  transform: translate3d(0, 0, 0) scale(1); }

.dialog.scale.transition-out {
  opacity: 0;
  -webkit-transition-duration: 400ms;
  transition-duration: 400ms;
  -webkit-transform: translate3d(0, 0, 0) scale(0.815);
  transform: translate3d(0, 0, 0) scale(0.815); }

.dialog-container {
  padding: 20px 0; }

.dialog-title {
  padding: 0 15px;
  font-size: 18px;
  line-height: 22px;
  font-weight: normal; }

.dialog-body {
  font-size: 14px;
  line-height: 16px;
  padding: 0 15px; }

.dialog-footer {
  height: 44px;
  position: relative;
  display: flex; }
  .dialog-footer a {
    flex: 1; }
  .dialog-footer::before {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    border-top: 1px solid #dbdbdb;
    -webkit-transform: scaleY(0.5);
    transform: scaleY(0.5); }
  .dialog-footer .dialog-button {
    height: 44px;
    line-height: 44px;
    font-size: 17px;
    position: relative; }
    .dialog-footer .dialog-button:not(:first-child)::before {
      position: absolute;
      content: "";
      top: 0;
      bottom: 0;
      left: 0;
      width: 0;
      border-left: 1px solid #dbdbdb;
      -webkit-transform: scaleX(0.5);
      transform: scaleX(0.5); }

.dialog-prompt-input {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  height: 30px;
  background: #fff;
  margin: 0;
  margin-top: 15px;
  padding: 0 5px;
  border: 1px solid #a0a0a0;
  border-radius: 5px;
  width: 100%;
  font-size: 14px;
  display: block;
  -webkit-box-shadow: 0 0 0 transparent;
  box-shadow: 0 0 0 transparent;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

/* dialog end */

/*# sourceMappingURL=data:application/json;base64, */
