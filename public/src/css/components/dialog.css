@charset "UTF-8";
/*
* @Author: shunjinchan
* @Date:   2015-12-27 17:37:48
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-25 22:51:45
*/
/* 
* @Author: shunjinchan
* @Date:   2016-01-23 01:01:03
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-25 00:34:39
* 模拟一像素
* @usage:
* @media screen and (-webkit-min-device-pixel-ratio: 2) { @include border(bottom, #abcdef) }
*/
/* dialog begin */
.dialog {
  width: 5.4rem;
  background-color: rgba(255, 255, 255, 0.9);
  text-align: center;
  border-radius: 0.12rem;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -2.7rem;
  z-index: 1070; }
  .dialog.vertical-button .dialog-footer {
    height: auto;
    display: block; }
  .dialog.vertical-button .dialog-button {
    display: block;
    width: 100%; }
    @media screen and (-webkit-min-device-pixel-ratio: 2) {
      .dialog.vertical-button .dialog-button {
        border: 0;
        background-position: left top;
        background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0.5, transparent), color-stop(0.5, #dbdbdb), to(#dbdbdb));
        background-repeat: repeat-x;
        -webkit-background-size: 100% 1px;
        /*no*/ } }

.dialog.scale {
  opacity: 0;
  -webkit-transform: translate3d(0, 0, 0) scale(1.185);
  transform: translate3d(0, 0, 0) scale(1.185);
  -webkit-transition-property: -webkit-transform, opacity;
  -webkit-transition-property: opacity, -webkit-transform;
  transition-property: opacity, -webkit-transform;
  transition-property: transform, opacity;
  transition-property: transform, opacity, -webkit-transform; }
  .dialog.scale.transition-in {
    opacity: 1;
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transform: translate3d(0, 0, 0) scale(1);
    transform: translate3d(0, 0, 0) scale(1); }
  .dialog.scale.transition-out {
    opacity: 0;
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transform: translate3d(0, 0, 0) scale(0.815);
    transform: translate3d(0, 0, 0) scale(0.815); }

.dialog-container {
  padding: 0.4rem 0; }

.dialog-title {
  padding: 0 0.3rem;
  font-size: 0.36rem;
  line-height: 0.44rem;
  font-weight: normal; }

.dialog-body {
  font-size: 0.28rem;
  line-height: 0.32rem;
  padding: 0 0.3rem; }

.dialog-footer {
  height: 0.88rem;
  position: relative;
  display: flex; }
  .dialog-footer a {
    flex: 1; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .dialog-footer {
      border: 0;
      background-position: left top;
      background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0.5, transparent), color-stop(0.5, #dbdbdb), to(#dbdbdb));
      background-repeat: repeat-x;
      -webkit-background-size: 100% 1px;
      /*no*/ } }
  .dialog-footer .dialog-button {
    height: 0.88rem;
    line-height: 0.88rem;
    font-size: 0.34rem;
    position: relative;
    color: #007aff; }
    @media screen and (-webkit-min-device-pixel-ratio: 2) {
      .dialog-footer .dialog-button {
        border: 0;
        background-position: left top;
        background-image: -webkit-gradient(linear, right top, left top, color-stop(0.5, transparent), color-stop(0.5, #dbdbdb), to(#dbdbdb));
        background-repeat: repeat-y;
        -webkit-background-size: 1px 100%;
        /*no*/ } }
    .dialog-footer .dialog-button.bold {
      font-weight: 500; }

.dialog-input {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  height: 0.6rem;
  background: #fff;
  margin: 0;
  margin-top: 0.3rem;
  padding: 0 0.1rem;
  border: 1px solid #a0a0a0;
  border-radius: 0.1rem;
  width: 100%;
  font-size: 0.28rem;
  display: block;
  -webkit-box-shadow: 0 0 0 transparent;
  box-shadow: 0 0 0 transparent;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

/* action-sheet */
.action-sheet {
  position: absolute;
  padding-bottom: 0.2rem;
  left: 0;
  bottom: 0;
  z-index: 1070;
  width: 100%;
  -webkit-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0);
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform; }

.action-sheet-container,
.action-sheet-footer {
  margin: 0 0.2rem; }

.action-sheet-title {
  background-color: rgba(255, 255, 255, 0.9);
  font-size: 0.28rem;
  line-height: 0.36rem;
  padding: 0.3rem 0.5rem;
  border-radius: 0.16rem 0.16rem 0 0;
  text-align: center;
  color: #5f646e;
  position: relative; }
  @media screen and (-webkit-min-device-pixel-ratio: 2) {
    .action-sheet-title {
      border: 0;
      background-position: left bottom;
      background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0.5, transparent), color-stop(0.5, #dbdbdb), to(#dbdbdb));
      background-repeat: repeat-x;
      -webkit-background-size: 100% 1px;
      /*no*/ } }
  .action-sheet-title + .action-sheet-body .action-sheet-button:first-child {
    border-radius: 0; }

.action-sheet-button,
.action-sheet-close {
  background-color: rgba(255, 255, 255, 0.9);
  font-size: 0.34rem;
  height: 1.08rem;
  line-height: 1.08rem;
  padding: 0 0.5rem;
  text-align: center;
  font-weight: normal;
  margin: 0;
  box-sizing: border-box;
  display: block;
  position: relative;
  color: #007aff; }

@media screen and (-webkit-min-device-pixel-ratio: 2) {
  .action-sheet-button {
    border: 0;
    background-position: left bottom;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0.5, transparent), color-stop(0.5, #dbdbdb), to(#dbdbdb));
    background-repeat: repeat-x;
    -webkit-background-size: 100% 1px;
    /*no*/ } }

.action-sheet-button:first-child {
  border-radius: 0.16rem 0.16rem 0 0; }

.action-sheet-button:last-child {
  border-radius: 0 0 0.16rem 0.16rem; }

.action-sheet-button.bold {
  font-weight: 500; }

.action-sheet-button.danger {
  color: #ff3b30; }

.action-sheet-footer {
  margin-top: 0.16rem; }

.action-sheet-close {
  border-radius: 0.16rem; }

/* 底部滑入动画 */
.action-sheet.from-bottom.transition-in, .action-sheet.from-bottom.transition-out {
  -webkit-transition-duration: 400ms;
  transition-duration: 400ms;
  -webkit-transition-delay: 0s;
  transition-delay: 0s; }

.action-sheet.from-bottom.transition-in {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.action-sheet.from-bottom.transition-out {
  -webkit-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0); }

/*# sourceMappingURL=data:application/json;base64, */
