@charset "UTF-8";
/*
* @Author: shunjinchan
* @Date:   2015-12-27 17:37:48
* @Last Modified by:   shunjinchan
* @Last Modified time: 2016-01-10 11:32:58
*/
/* dialog begin */
.dialog {
  width: 270px;
  background-color: rgba(255, 255, 255, 0.9);
  text-align: center;
  border-radius: 6px;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -135px;
  z-index: 1070; }
  .dialog.vertical-button .dialog-footer {
    height: auto;
    display: block; }
  .dialog.vertical-button .dialog-button {
    display: block;
    width: 100%; }
    .dialog.vertical-button .dialog-button:not(:last-child)::before {
      position: absolute;
      content: "";
      left: 0;
      right: 0;
      top: auto;
      bottom: 0;
      width: 100%;
      border-top: 1px solid #dbdbdb;
      -webkit-transform: scaleY(0.5);
      transform: scaleY(0.5); }

.dialog.scale {
  opacity: 0;
  -webkit-transform: translate3d(0, 0, 0) scale(1.185);
  transform: translate3d(0, 0, 0) scale(1.185);
  -webkit-transition-property: -webkit-transform, opacity;
  -webkit-transition-property: opacity, -webkit-transform;
  transition-property: opacity, -webkit-transform;
  transition-property: transform, opacity;
  transition-property: transform, opacity, -webkit-transform; }
  .dialog.scale.transition-in {
    opacity: 1;
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transform: translate3d(0, 0, 0) scale(1);
    transform: translate3d(0, 0, 0) scale(1); }
  .dialog.scale.transition-out {
    opacity: 0;
    -webkit-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transform: translate3d(0, 0, 0) scale(0.815);
    transform: translate3d(0, 0, 0) scale(0.815); }

.dialog-container {
  padding: 20px 0; }

.dialog-title {
  padding: 0 15px;
  font-size: 18px;
  line-height: 22px;
  font-weight: normal; }

.dialog-body {
  font-size: 14px;
  line-height: 16px;
  padding: 0 15px; }

.dialog-footer {
  height: 44px;
  position: relative;
  display: flex; }
  .dialog-footer a {
    flex: 1; }
  .dialog-footer::before {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    border-top: 1px solid #dbdbdb;
    -webkit-transform: scaleY(0.5);
    transform: scaleY(0.5); }
  .dialog-footer .dialog-button {
    height: 44px;
    line-height: 44px;
    font-size: 17px;
    position: relative;
    color: #007aff; }
    .dialog-footer .dialog-button:not(:last-child)::before {
      position: absolute;
      content: "";
      top: 0;
      bottom: 0;
      left: auto;
      right: 0;
      width: 0;
      border-left: 1px solid #dbdbdb;
      -webkit-transform: scaleX(0.5);
      transform: scaleX(0.5); }
    .dialog-footer .dialog-button.bold {
      font-weight: 500; }

.dialog-input {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  height: 30px;
  background: #fff;
  margin: 0;
  margin-top: 15px;
  padding: 0 5px;
  border: 1px solid #a0a0a0;
  border-radius: 5px;
  width: 100%;
  font-size: 14px;
  display: block;
  -webkit-box-shadow: 0 0 0 transparent;
  box-shadow: 0 0 0 transparent;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

/* action-sheet */
.action-sheet {
  position: absolute;
  padding-bottom: 10px;
  left: 0;
  bottom: 0;
  z-index: 11000;
  width: 100%;
  -webkit-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0);
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform; }

.action-sheet-container,
.action-sheet-footer {
  margin: 0 10px; }

.action-sheet-title {
  background-color: rgba(255, 255, 255, 0.9);
  font-size: 14px;
  line-height: 18px;
  padding: 15px 25px;
  border-radius: 8px 8px 0 0;
  text-align: center;
  color: #777;
  position: relative; }
  .action-sheet-title::before {
    position: absolute;
    content: "";
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    border-top: 1px solid #dbdbdb;
    -webkit-transform: scaleY(0.5);
    transform: scaleY(0.5); }
  .action-sheet-title + .action-sheet-body .action-sheet-button:first-child {
    border-radius: 0; }

.action-sheet-button,
.action-sheet-close {
  background-color: rgba(255, 255, 255, 0.9);
  font-size: 18px;
  line-height: 24px;
  padding: 15px 25px;
  text-align: center;
  font-weight: normal;
  margin: 0;
  box-sizing: border-box;
  display: block;
  position: relative;
  color: #007aff; }

.action-sheet-button:first-child {
  border-radius: 8px 8px 0 0; }

.action-sheet-button:last-child {
  border-radius: 0 0 8px 8px; }

.action-sheet-button:not(:last-child)::before {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  border-top: 1px solid #dbdbdb;
  -webkit-transform: scaleY(0.5);
  transform: scaleY(0.5); }

.action-sheet-button.bold {
  font-weight: 500; }

.action-sheet-button.danger {
  color: #ff3b30; }

.action-sheet-footer {
  margin-top: 8px; }

.action-sheet-close {
  border-radius: 8px; }

/* 底部滑入动画 */
.action-sheet.from-bottom.transition-in, .action-sheet.from-bottom.transition-out {
  -webkit-transition-duration: 400ms;
  transition-duration: 400ms;
  -webkit-transition-delay: 0s;
  transition-delay: 0s; }

.action-sheet.from-bottom.transition-in {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.action-sheet.from-bottom.transition-out {
  -webkit-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0); }

/*# sourceMappingURL=data:application/json;base64, */
